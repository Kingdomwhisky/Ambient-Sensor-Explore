C51 COMPILER V8.12   SCALERCOLORSPACEWAITEVENTFORAUTOBLOCKTOGG                             05/25/2022 15:41:05 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE SCALERCOLORSPACEWAITEVENTFORAUTOBLOCKTOGG
OBJECT MODULE PLACED IN .\Output\ScalerColorSpaceWaitEventForAutoBlockToggle.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\ScalerFunction\Lib\Code\ScalerColor\ScalerColorSpaceWaitEventForAutoB
                    -lockToggle.c LARGE OPTIMIZE(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\Sca
                    -lerFunction\Header;..\..\ScalerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Li
                    -b\Header;..\..\RL6432_Series_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXT
                    -END PRINT(.\Output\ScalerColorSpaceWaitEventForAutoBlockToggle.lst) OBJECT(.\Output\ScalerColorSpaceWaitEventForAutoBloc
                    -kToggle.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : ScalerColorSpaceWaitEventForAutoBlockToggle.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "ScalerColorLibInternalInclude.h"
  20          
  21          
  22          //****************************************************************************
  23          // DEFINITIONS / MACROS
  24          //****************************************************************************
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          BYTE ScalerColorSpaceConvertIDomainWaitEventForAutoBlockToggle(void);
  45          void ScalerColorSpaceConvertDDomainWaitEventForAutoBlockToggle(BYTE ucDVSCnt);
  46          
  47          
  48          //****************************************************************************
  49          // FUNCTION DEFINITIONS
  50          //****************************************************************************
C51 COMPILER V8.12   SCALERCOLORSPACEWAITEVENTFORAUTOBLOCKTOGG                             05/25/2022 15:41:05 PAGE 2   

  51          //--------------------------------------------------
  52          // Description  : Wait for event before setting I color space for FRC auto block toggle case
  53          // Input Value  : None
  54          // Output Value : DVS current count
  55          //--------------------------------------------------
  56          BYTE ScalerColorSpaceConvertIDomainWaitEventForAutoBlockToggle(void)
  57          {
  58   1          BYTE ucDVSCnt = 0;
  59   1      
  60   1          if(GET_MEMORY_FRAME_BUFFER() == _MEMORY_1_5_FRAME_BUFFER)
  61   1          {
  62   2              if(GET_MEMORY_DVF_SELECT() == _2_5_IVF)
  63   2              {
  64   3                  ScalerTimerWaitForEvent(_EVENT_DVS);
  65   3                  ScalerGetDataPortByte(P0_2A_DISPLAY_FORMAT_ADDR_PORT, _P0_2B_PT_28_FREE_RUN_DVS_CNT, 1, &ucDVS
             -Cnt, _NON_AUTOINC);
  66   3              }
  67   2      
  68   2              ScalerTimerWaitForEvent(_EVENT_IEN_STOP);
  69   2          }
  70   1      
  71   1          return ucDVSCnt;
  72   1      }
  73          
  74          //--------------------------------------------------
  75          // Description  : Wait for event before setting D color space for FRC auto block toggle case
  76          // Input Value  : DVS current count
  77          // Output Value : None
  78          //--------------------------------------------------
  79          void ScalerColorSpaceConvertDDomainWaitEventForAutoBlockToggle(BYTE ucDVSCnt)
  80          {
  81   1          if(GET_MEMORY_FRAME_BUFFER() == _MEMORY_1_5_FRAME_BUFFER)
  82   1          {
  83   2              switch(GET_MEMORY_DVF_SELECT())
  84   2              {
  85   3                  case _3_IVF:
  86   3                  default:
  87   3      
  88   3                      ScalerTimerWaitForEvent(_EVENT_DEN_START);
  89   3                      ScalerTimerWaitForEvent(_EVENT_DEN_START);
  90   3                      break;
  91   3      
  92   3                  case _2_5_IVF:
  93   3      
  94   3                      switch(ucDVSCnt)
  95   3                      {
  96   4                          case 0:
  97   4                          case 1:
  98   4                          default:
  99   4      
 100   4                              ScalerTimerWaitForEvent(_EVENT_DEN_START);
 101   4                              ScalerTimerWaitForEvent(_EVENT_DEN_START);
 102   4                              break;
 103   4      
 104   4                          case 2:
 105   4                          case 3:
 106   4                          case 4:
 107   4      
 108   4                              ScalerTimerWaitForEvent(_EVENT_DEN_START);
 109   4      
 110   4                              break;
 111   4                      }
C51 COMPILER V8.12   SCALERCOLORSPACEWAITEVENTFORAUTOBLOCKTOGG                             05/25/2022 15:41:05 PAGE 3   

 112   3                      break;
 113   3              }
 114   2          }
 115   1      }
 116          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    128    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
