C51 COMPILER V8.12   RL6432_SERIES_COLORRGB3DGAMMA                                         05/25/2022 15:41:31 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE RL6432_SERIES_COLORRGB3DGAMMA
OBJECT MODULE PLACED IN .\Output\RL6432_Series_ColorRGB3DGamma.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\RL6432_Series_Color\RL6432_Series_ColorRGB3DGamma.c LARGE OPTIMIZE(9,S
                    -PEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header;..\..\Scaler
                    -CommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6432_Series_Co
                    -mmon\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output\RL6432_Serie
                    -s_ColorRGB3DGamma.lst) OBJECT(.\Output\RL6432_Series_ColorRGB3DGamma.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : RL6432_Series_ColorRGB3DGamma.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "RL6432_Series_ColorLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          //--------------------------------------------------
  25          // Table Length
  26          //--------------------------------------------------
  27          #define _3DGAMMA_TABLE_SIZE                     3645
  28          
  29          
  30          //****************************************************************************
  31          // STRUCT / TYPE / ENUM DEFINITTIONS
  32          //****************************************************************************
  33          
  34          
  35          //****************************************************************************
  36          // CODE TABLES
  37          //****************************************************************************
  38          
  39          
  40          //****************************************************************************
  41          // VARIABLE DECLARATIONS
  42          //****************************************************************************
  43          
  44          
  45          //****************************************************************************
  46          // FUNCTION DECLARATIONS
  47          //****************************************************************************
  48          void ScalerColorRGB3DGammaAdjust(BYTE *pucGammaTableArray, BYTE ucBankNum);
  49          
  50          
  51          //****************************************************************************
C51 COMPILER V8.12   RL6432_SERIES_COLORRGB3DGAMMA                                         05/25/2022 15:41:31 PAGE 2   

  52          // FUNCTION DEFINITIONS
  53          //****************************************************************************
  54          //--------------------------------------------------
  55          // Description  : Adjust 3D gamma
  56          // Input Value  : 3D Gamma Table and 3D Gamma Table Banks
  57          // Output Value : None
  58          //--------------------------------------------------
  59          void ScalerColorRGB3DGammaAdjust(BYTE *pucGammaTableArray, BYTE ucBankNum)
  60          {
  61   1          if(ScalerGetBit(P9_B0_RGB_3D_GAMMA_CTRL, _BIT7) == _BIT7) // 3D Gamma On
  62   1          {
  63   2              ScalerTimerWaitForEvent(_EVENT_DEN_STOP);
  64   2              ScalerColorRGB3DGammaEnable(_FUNCTION_OFF);
  65   2      
  66   2              // Enable Gamma access
  67   2              ScalerSetBit(P9_B0_RGB_3D_GAMMA_CTRL, ~_BIT6, _BIT6);
  68   2      
  69   2              // Initial Table Address
  70   2              ScalerSetByte(P9_B1_RGB_3D_GAMMA_ADDRESS_H, 0x00);
  71   2              ScalerSetByte(P9_B2_RGB_3D_GAMMA_ADDRESS_L, 0x00);
  72   2      
  73   2              // Load gamma table of 3D Gamma
  74   2              ScalerBurstWrite(pucGammaTableArray, _3DGAMMA_TABLE_SIZE, ucBankNum, P9_B3_RGB_3D_GAMMA_PORT, _BUR
             -STWRITE_DATA_COMMON, _BURSTWRITE_FROM_FLASH);
  75   2      
  76   2              // Disable Port Access
  77   2              ScalerSetBit(P9_B0_RGB_3D_GAMMA_CTRL, ~_BIT6, 0x00);
  78   2      
  79   2              ScalerTimerWaitForEvent(_EVENT_DEN_STOP);
  80   2              ScalerColorRGB3DGammaEnable(_FUNCTION_ON);
  81   2          }
  82   1          else
  83   1          {
  84   2              // Enable Gamma access
  85   2              ScalerSetBit(P9_B0_RGB_3D_GAMMA_CTRL, ~_BIT6, _BIT6);
  86   2      
  87   2              // Initial Table Address
  88   2              ScalerSetByte(P9_B1_RGB_3D_GAMMA_ADDRESS_H, 0x00);
  89   2              ScalerSetByte(P9_B2_RGB_3D_GAMMA_ADDRESS_L, 0x00);
  90   2      
  91   2              // Load gamma table of 3D Gamma
  92   2              ScalerBurstWrite(pucGammaTableArray, _3DGAMMA_TABLE_SIZE, ucBankNum, P9_B3_RGB_3D_GAMMA_PORT, _BUR
             -STWRITE_DATA_COMMON, _BURSTWRITE_FROM_FLASH);
  93   2      
  94   2              // Disable Port Access
  95   2              ScalerSetBit(P9_B0_RGB_3D_GAMMA_CTRL, ~_BIT6, 0x00);
  96   2          }
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    112    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
