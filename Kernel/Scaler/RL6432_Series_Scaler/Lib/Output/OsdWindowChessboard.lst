C51 COMPILER V8.12   OSDWINDOWCHESSBOARD                                                   05/25/2022 15:41:21 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OSDWINDOWCHESSBOARD
OBJECT MODULE PLACED IN .\Output\OsdWindowChessboard.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\ScalerFunction\Lib\Code\ScalerOSD\Windows\OsdWindowChessboard.c LARGE
                    - OPTIMIZE(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header
                    -;..\..\ScalerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6
                    -432_Series_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output
                    -\OsdWindowChessboard.lst) OBJECT(.\Output\OsdWindowChessboard.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : OsdWindowChessboard.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "ScalerOSDLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          void ScalerOsdWindowChessboard(bit bEnable, EnumOsdWindowsType enumOsdWindowsType, BYTE ucChessBoardColor1
             -, BYTE ucChessBoardColor2);
  45          
  46          
  47          //****************************************************************************
  48          // FUNCTION DEFINITIONS
  49          //****************************************************************************
  50          //--------------------------------------------------
C51 COMPILER V8.12   OSDWINDOWCHESSBOARD                                                   05/25/2022 15:41:21 PAGE 2   

  51          // Description  : Set window 6 Special function
  52          // Input Value  : bEnable            -> _ENABLE or _DISABLE
  53          //                enumOsdWindowsType -> _OSD_WINDOW_8   or _OSD_WINDOW_9   or _OSD_WINDOW_4_1 or _OSD_WIND
             -OW_4_2 or _OSD_WINDOW_4_3 or
  54          //                                      _OSD_WINDOW_4_4 or _OSD_WINDOW_4_5 or _OSD_WINDOW_4_6 or _OSD_WIND
             -OW_4_7 or _OSD_WINDOW_4_8
  55          //                ChessBoardColor1   -> Color (0 ~ 63)
  56          //                ChessBoardColor2   -> Color (0 ~ 63)
  57          // Output Value :
  58          //--------------------------------------------------
  59          void ScalerOsdWindowChessboard(bit bEnable, EnumOsdWindowsType enumOsdWindowsType, BYTE ucChessBoardColor1
             -, BYTE ucChessBoardColor2)
  60          {
  61   1          WORD usTemp = 0;
  62   1      
  63   1          if((enumOsdWindowsType >= _OSD_WINDOW_4_1) && (enumOsdWindowsType <= _OSD_WINDOW_4_8))
  64   1          {
  65   2              // _OSD_WINDOW_4_1 ~ _OSD_WINDOW_4_8
  66   2              usTemp = 0x164 + (enumOsdWindowsType - _OSD_WINDOW_4_1) * 2;
  67   2          }
  68   1      #if(_OSD_WINDOW_CHESSBORAD_WIN8_WIND9_SUPPORT == _ON)
  69   1          else if((enumOsdWindowsType == _OSD_WINDOW_8) || (enumOsdWindowsType == _OSD_WINDOW_9))
  70   1          {
  71   2              usTemp = 0x161 + (enumOsdWindowsType - _OSD_WINDOW_8) * 2;
  72   2          }
  73   1      #endif
  74   1      #if(_OSD_WINDOW_5_1_5_8_SUPPORT == _ON)
  75   1          else if((enumOsdWindowsType >= _OSD_WINDOW_5_1) && (enumOsdWindowsType <= _OSD_WINDOW_5_8))
  76   1          {
  77   2              // _OSD_WINDOW_5_1 ~ _OSD_WINDOW_5_8
  78   2              usTemp = 0x2A0 + (enumOsdWindowsType - _OSD_WINDOW_5_1) * 10;
  79   2          }
  80   1      #endif
  81   1      
  82   1          ScalerOsdWriteAllByte((_OSD_WIN_CONTROL), usTemp, (BYTE)bEnable << 7, (ucChessBoardColor1 & 0x3F), (uc
             -ChessBoardColor2 & 0x3F));
  83   1      }
  84          
  85          
  86          /*
  87          //--------------------------------------------------
  88          // example
  89          //--------------------------------------------------
  90              ScalerOsdWindowChessboard(_ENABLE, _OSD_WINDOW_4_1, 0, 8);
  91          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    134    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
