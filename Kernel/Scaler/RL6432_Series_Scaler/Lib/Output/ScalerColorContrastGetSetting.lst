C51 COMPILER V8.12   SCALERCOLORCONTRASTGETSETTING                                         05/25/2022 15:41:06 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE SCALERCOLORCONTRASTGETSETTING
OBJECT MODULE PLACED IN .\Output\ScalerColorContrastGetSetting.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\ScalerFunction\Lib\Code\ScalerColor\ScalerColorContrastGetSetting.c L
                    -ARGE OPTIMIZE(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\He
                    -ader;..\..\ScalerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..
                    -\RL6432_Series_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Ou
                    -tput\ScalerColorContrastGetSetting.lst) OBJECT(.\Output\ScalerColorContrastGetSetting.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : ScalerColorContrastGetSetting.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "ScalerColorLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          void ScalerColorContrastGetSetting(EnumBriConCoefType enumBriConCoefType, WORD *pusData);
  45          
  46          //****************************************************************************
  47          // FUNCTION DEFINITIONS
  48          //****************************************************************************
  49          //--------------------------------------------------
  50          // Description  : Get Contrast Setting
  51          // Input Value  : EnumBriConCoefType, Coefficient
C51 COMPILER V8.12   SCALERCOLORCONTRASTGETSETTING                                         05/25/2022 15:41:06 PAGE 2   

  52          // Output Value : Contrast Setting
  53          //--------------------------------------------------
  54          void ScalerColorContrastGetSetting(EnumBriConCoefType enumBriConCoefType, WORD *pusData)
  55          {
  56   1          BYTE ucTempH = 0;
  57   1      #if(_CTS_TYPE == _CTS_GEN_1_12BIT)
  58   1          BYTE ucTempL = 0;
  59   1      #endif
  60   1      
  61   1          switch(enumBriConCoefType)
  62   1          {
  63   2              case _CONTRAST_COEF_A:
  64   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_03_CTS_RED_COE_SETA_H, 1, &ucTempH, _N
             -ON_AUTOINC);
  65   2      #if(_CTS_TYPE == _CTS_GEN_0_8BIT)
                          pusData[0] = ucTempH;
              #elif(_CTS_TYPE == _CTS_GEN_1_12BIT)
  68   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_21_CTS_COE_SETA_RG_L, 1, &ucTempL, _NO
             -N_AUTOINC);
  69   2                  pusData[0] = (((WORD)ucTempH) << 4) | ((ucTempL & 0xF0) >> 4);
  70   2      #endif
  71   2      
  72   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_04_CTS_GRN_COE_SETA_H, 1, &ucTempH, _N
             -ON_AUTOINC);
  73   2      #if(_CTS_TYPE == _CTS_GEN_0_8BIT)
                          pusData[1] = ucTempH;
              #elif(_CTS_TYPE == _CTS_GEN_1_12BIT)
  76   2                  pusData[1] = (((WORD)ucTempH) << 4) | ((ucTempL & 0x0F));
  77   2      #endif
  78   2      
  79   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_05_CTS_BLU_COE_SETA_H, 1, &ucTempH, _N
             -ON_AUTOINC);
  80   2      #if(_CTS_TYPE == _CTS_GEN_0_8BIT)
                          pusData[2] = ucTempH;
              #elif(_CTS_TYPE == _CTS_GEN_1_12BIT)
  83   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_22_CTS_COE_SETA_B_L, 1, &ucTempL, _NON
             -_AUTOINC);
  84   2                  pusData[2] = (((WORD)ucTempH) << 4) | ((ucTempL & 0xF0) >> 4);
  85   2      #endif
  86   2                  break;
  87   2      
  88   2              case _CONTRAST_COEF_B:
  89   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_09_CTS_RED_COE_SETB_H, 1, &ucTempH, _N
             -ON_AUTOINC);
  90   2      #if(_CTS_TYPE == _CTS_GEN_0_8BIT)
                          pusData[0] = ucTempH;
              #elif(_CTS_TYPE == _CTS_GEN_1_12BIT)
  93   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_24_CTS_COE_SETB_RG_L, 1, &ucTempL, _NO
             -N_AUTOINC);
  94   2                  pusData[0] = (((WORD)ucTempH) << 4) | ((ucTempL & 0xF0) >> 4);
  95   2      #endif
  96   2      
  97   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_0A_CTS_GRN_COE_SETB_H, 1, &ucTempH, _N
             -ON_AUTOINC);
  98   2      #if(_CTS_TYPE == _CTS_GEN_0_8BIT)
                          pusData[1] = ucTempH;
              #elif(_CTS_TYPE == _CTS_GEN_1_12BIT)
 101   2                  pusData[1] = (((WORD)ucTempH) << 4) | ((ucTempL & 0x0F));
 102   2      #endif
 103   2      
 104   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_0B_CTS_BLU_COE_SETB_H, 1, &ucTempH, _N
             -ON_AUTOINC);
C51 COMPILER V8.12   SCALERCOLORCONTRASTGETSETTING                                         05/25/2022 15:41:06 PAGE 3   

 105   2      #if(_CTS_TYPE == _CTS_GEN_0_8BIT)
                          pusData[2] = ucTempH;
              #elif(_CTS_TYPE == _CTS_GEN_1_12BIT)
 108   2                  ScalerGetDataPortByte(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_25_CTS_COE_SETB_B_L, 1, &ucTempL, _NON
             -_AUTOINC);
 109   2                  pusData[2] = (((WORD)ucTempH) << 4) | ((ucTempL & 0xF0) >> 4);
 110   2      #endif
 111   2                  break;
 112   2      
 113   2              default:
 114   2                  break;
 115   2          }
 116   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    335    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
