C51 COMPILER V8.12   RL6432_SERIES_OSDHARDWAREVLC                                          05/25/2022 15:41:38 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE RL6432_SERIES_OSDHARDWAREVLC
OBJECT MODULE PLACED IN .\Output\RL6432_Series_OsdHardwareVLC.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\RL6432_Series_OSD\SRAM\RL6432_Series_OsdHardwareVLC.c LARGE OPTIMIZE(9
                    -,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header;..\..\Scal
                    -erCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6432_Series_
                    -Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output\RL6432_Ser
                    -ies_OsdHardwareVLC.lst) OBJECT(.\Output\RL6432_Series_OsdHardwareVLC.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : RL6432_Series_OsdHardwareVLC.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "RL6432_Series_OSDLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          void ScalerOsdHardwareVLC(BYTE *pucArray, WORD usVLCTableSize, BYTE ucBankNum, WORD usOffset, WORD usFontT
             -ableStart, EnumOsdRotateType enumOsdRotateType);
  45          
  46          
  47          //****************************************************************************
  48          // FUNCTION DEFINITIONS
  49          //****************************************************************************
  50          //--------------------------------------------------
C51 COMPILER V8.12   RL6432_SERIES_OSDHARDWAREVLC                                          05/25/2022 15:41:38 PAGE 2   

  51          // Description  : Osd Load Hardware VLC
  52          // Input Value  : *pArray          -> VLC table
  53          //                usVLCTableSize   -> Use VLC_TABLE_SIZE(VLC table)
  54          //                ucBankNum        -> Bank number (GET_CURRENT_BANK_NUMBER())
  55          //                usOffset         -> Font address
  56          //                usFontTableStart -> Font base address
  57          //                ucOsdRotateType  -> _OSD_ROTATE_DEGREE_0 or _OSD_ROTATE_DEGREE_90 or _OSD_ROTATE_DEGREE_
             -270 or _OSD_ROTATE_DEGREE_180
  58          // Output Value :
  59          //--------------------------------------------------
  60          void ScalerOsdHardwareVLC(BYTE *pucArray, WORD usVLCTableSize, BYTE ucBankNum, WORD usOffset, WORD usFontT
             -ableStart, EnumOsdRotateType enumOsdRotateType)
  61          {
  62   1          BYTE ucVlcType = 0;
  63   1      
  64   1          if(enumOsdRotateType == _OSD_ROTATE_DEGREE_90)
  65   1          {
  66   2              ucVlcType = _OSD_ROTATE_CW | _OSD_ROTATE_HARDWARE_ROTATION_ENABLE | _OSD_ROTATE_ROTATION;
  67   2          }
  68   1          else if(enumOsdRotateType == _OSD_ROTATE_DEGREE_270)
  69   1          {
  70   2              ucVlcType = _OSD_ROTATE_CCW | _OSD_ROTATE_HARDWARE_ROTATION_ENABLE | _OSD_ROTATE_ROTATION;
  71   2          }
  72   1          else if(enumOsdRotateType == _OSD_ROTATE_DEGREE_180)
  73   1          {
  74   2              ucVlcType = _OSD_ROTATE_CW180 | _OSD_ROTATE_HARDWARE_ROTATION_ENABLE | _OSD_ROTATE_NORMAL;
  75   2          }
  76   1          else
  77   1          {
  78   2              ucVlcType = _OSD_ROTATE_NO_SWAP;
  79   2          }
  80   1      
  81   1          // rotation
  82   1          ScalerSetBit(P3A_0B_FRAME_CTRL_0B, ~(_BIT7 | _BIT6 | _BIT2 | _BIT0), ucVlcType);
  83   1      
  84   1          ScalerBurstWrite(pucArray, 8, ucBankNum, P3A_0F_FRAME_CTRL_0F, _BURSTWRITE_DATA_COMMON_AUTO_INC, _BURS
             -TWRITE_FROM_FLASH);
  85   1      
  86   1          usOffset = usOffset * 9;
  87   1          usOffset += usFontTableStart;
  88   1      
  89   1          // osd compression enable
  90   1          ScalerSetBit(P3A_17_FRAME_CTRL_17, ~(_BIT1 | _BIT0), (_OSD_DECODE_COMPRESSED | _OSD_COMPRESSION_ENABLE
             -));
  91   1      
  92   1          pucArray += 10;
  93   1      
  94   1          ScalerOsdSramAddressSet(usOffset, _OSD_BYTEALL);
  95   1          ScalerOsdBurstWriteDataPort(pucArray, usVLCTableSize, ucBankNum, _BURSTWRITE_DATA_OSD, _BURSTWRITE_FRO
             -M_FLASH);
  96   1      
  97   1          // OSD HW needs time to process it and then write decompressed data into SRAM.
  98   1          // The value 1ms is enough at all.
  99   1          ScalerTimerDelayXms(2);
 100   1      
 101   1          // osd compression disable
 102   1          ScalerSetBit(P3A_17_FRAME_CTRL_17, ~(_BIT1 | _BIT0), (_OSD_DECODE_COMPRESSED | _OSD_COMPRESSION_DISABL
             -E));
 103   1      
 104   1          switch(enumOsdRotateType)
 105   1          {
 106   2              case _OSD_ROTATE_DEGREE_90:
C51 COMPILER V8.12   RL6432_SERIES_OSDHARDWAREVLC                                          05/25/2022 15:41:38 PAGE 3   

 107   2              case _OSD_ROTATE_DEGREE_270:
 108   2                  ucVlcType = _OSD_ROTATE_ROTATION;
 109   2                  break;
 110   2      
 111   2              default:
 112   2              case _OSD_ROTATE_DEGREE_180:
 113   2                  ucVlcType = _OSD_ROTATE_NORMAL;
 114   2                  break;
 115   2          }
 116   1      
 117   1          ScalerSetBit(P3A_0B_FRAME_CTRL_0B, ~(_BIT7 | _BIT6 | _BIT2 | _BIT0), ucVlcType);
 118   1      }
 119          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    268    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
