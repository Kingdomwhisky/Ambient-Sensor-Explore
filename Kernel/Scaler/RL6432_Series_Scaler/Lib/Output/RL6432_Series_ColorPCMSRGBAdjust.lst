C51 COMPILER V8.12   RL6432_SERIES_COLORPCMSRGBADJUST                                      05/25/2022 15:41:31 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE RL6432_SERIES_COLORPCMSRGBADJUST
OBJECT MODULE PLACED IN .\Output\RL6432_Series_ColorPCMSRGBAdjust.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\RL6432_Series_Color\RL6432_Series_ColorPCMSRGBAdjust.c LARGE OPTIMIZE(
                    -9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header;..\..\Sca
                    -lerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6432_Series
                    -_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output\RL6432_Se
                    -ries_ColorPCMSRGBAdjust.lst) OBJECT(.\Output\RL6432_Series_ColorPCMSRGBAdjust.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : RL6432_Series_ColorPCMSRGBAdjust.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "RL6432_Series_ColorLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          
  25          //****************************************************************************
  26          // STRUCT / TYPE / ENUM DEFINITTIONS
  27          //****************************************************************************
  28          
  29          
  30          //****************************************************************************
  31          // CODE TABLES
  32          //****************************************************************************
  33          
  34          
  35          //****************************************************************************
  36          // VARIABLE DECLARATIONS
  37          //****************************************************************************
  38          
  39          
  40          //****************************************************************************
  41          // FUNCTION DECLARATIONS
  42          //****************************************************************************
  43          void ScalerColorPCMSRGBAdjust(EnumSrgbPrecision enumSrgbPrecision, BYTE *pucColorMatrixArray, BYTE ucBankN
             -um, WORD usLength);
  44          
  45          
  46          //****************************************************************************
  47          // FUNCTION DEFINITIONS
  48          //****************************************************************************
  49          
  50          //--------------------------------------------------
C51 COMPILER V8.12   RL6432_SERIES_COLORPCMSRGBADJUST                                      05/25/2022 15:41:31 PAGE 2   

  51          // Description  : Write Color Matrix
  52          // Input Value  : bIsAdobe: 1 = AdobeRGB, 0- sRGB, Table Length
  53          // Output Value : None
  54          //--------------------------------------------------
  55          void ScalerColorPCMSRGBAdjust(EnumSrgbPrecision enumSrgbPrecision, BYTE *pucColorMatrixArray, BYTE ucBankN
             -um, WORD usLength)
  56          {
  57   1          if(usLength == 312)
  58   1          {
  59   2              ScalerSetDataPortBit(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_26_CTS_BRI_SWAP, ~_BIT4, _BIT4);
  60   2          }
  61   1          else
  62   1          {
  63   2              ScalerSetDataPortBit(P0_64_CTS_BRI_PORT_ADD, _P0_65_PT_26_CTS_BRI_SWAP, ~_BIT4, 0x00);
  64   2          }
  65   1      
  66   1          // Clear Waiting flag
  67   1          ScalerSetBit(P0_62_SRGB_CTRL, ~_BIT7, 0x00);
  68   1          ScalerSetBit(P0_62_SRGB_CTRL, ~_BIT6, _BIT6); // Reset Port
  69   1      
  70   1          ScalerTimerPollingFlagProc(2, P0_62_SRGB_CTRL, _BIT6, 0); // pollling till Reset port address finished
  71   1      
  72   1          ScalerSetBit(P0_62_SRGB_CTRL, ~(_BIT5 | _BIT4 | _BIT3), 0x00); // Write sequence
  73   1      
  74   1          ScalerBurstWrite(pucColorMatrixArray, usLength, ucBankNum, P0_63_SRGB_ACCESS_PORT_SETA, _BURSTWRITE_DA
             -TA_COMMON, _BURSTWRITE_FROM_FLASH);
  75   1          if(usLength != 312)
  76   1          {
  77   2              memset(pData, 0, 6);
  78   2              ScalerWrite(P0_63_SRGB_ACCESS_PORT_SETA, 6, pData, _NON_AUTOINC);
  79   2          }
  80   1          // ScalerBurstWrite(pData, 6, 0, P0_63_SRGB_ACCESS_PORT_SETA, _BURSTWRITE_DATA_COMMON, _BURSTWRITE_FRO
             -M_XRAM);
  81   1      
  82   1          ScalerSetBit(P0_68_GAMMA_BIST_DITHER_SETA, ~(_BIT6 | _BIT5), (enumSrgbPrecision << 5)); // Precision
  83   1      
  84   1          ScalerSetBit(P0_62_SRGB_CTRL, ~_BIT7, _BIT7);   // no apply none, always effective on dvs
  85   1      }
  86          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    210    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
