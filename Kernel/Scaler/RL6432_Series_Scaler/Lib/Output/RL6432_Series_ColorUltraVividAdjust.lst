C51 COMPILER V8.12   RL6432_SERIES_COLORULTRAVIVIDADJUST                                   05/25/2022 15:41:33 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE RL6432_SERIES_COLORULTRAVIVIDADJUST
OBJECT MODULE PLACED IN .\Output\RL6432_Series_ColorUltraVividAdjust.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\RL6432_Series_Color\RL6432_Series_ColorUltraVividAdjust.c LARGE OPTIMI
                    -ZE(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header;..\..\
                    -ScalerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6432_Ser
                    -ies_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output\RL6432
                    -_Series_ColorUltraVividAdjust.lst) OBJECT(.\Output\RL6432_Series_ColorUltraVividAdjust.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : RL6432_Series_ColorUltraVividAdjust.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "RL6432_Series_ColorLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          //--------------------------------------------------
  25          // Table Length
  26          //--------------------------------------------------
  27          #define _ULTRAVIVID_TABLE_SIZE                  238
  28          #define _ULTRAVIVID_TABLE_SIZE_CDS              29
  29          
  30          
  31          //****************************************************************************
  32          // STRUCT / TYPE / ENUM DEFINITTIONS
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // CODE TABLES
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // VARIABLE DECLARATIONS
  43          //****************************************************************************
  44          
  45          
  46          //****************************************************************************
  47          // FUNCTION DECLARATIONS
  48          //****************************************************************************
  49          void ScalerColorUltraVividAdjust(BYTE code *pucUltraVividSetting, BYTE ucBankNum);
  50          
  51          //****************************************************************************
C51 COMPILER V8.12   RL6432_SERIES_COLORULTRAVIVIDADJUST                                   05/25/2022 15:41:33 PAGE 2   

  52          // FUNCTION DEFINITIONS
  53          //****************************************************************************
  54          //--------------------------------------------------
  55          // Description  : UltraVivid Adjust
  56          // Input Value  : UltraVivid Table and ucBankNum
  57          // Output Value : None
  58          //--------------------------------------------------
  59          void ScalerColorUltraVividAdjust(BYTE code *pucUltraVividSetting, BYTE ucBankNum)
  60          {
  61   1          if(GET_V_SCALE_UP() == _TRUE)
  62   1          {
  63   2              ScalerGetDataPortByte(P0_33_SF_ADDR_PORT, _P0_34_PT_03_VER_SCALE_FACTOR_H, 2, pData, _AUTOINC);
  64   2              pData[0] = ((pData[0] << 4) | (pData[1] >> 4));
  65   2      
  66   2              if(pData[0] < 85)  // IVHeight/DVHeight <= 1/4
  67   2              {
  68   3                  ScalerBurstWrite(pucUltraVividSetting, _ULTRAVIVID_TABLE_SIZE, ucBankNum, P11_B9_SCALER_LSR_HL
             -W, _BURSTWRITE_COMMAND, _BURSTWRITE_FROM_FLASH);
  69   3              }
  70   2              else if(pData[0] < 170)  // IVHeight/DVHeight < 2/3
  71   2              {
  72   3                  ScalerBurstWrite(pucUltraVividSetting + _ULTRAVIVID_TABLE_SIZE, _ULTRAVIVID_TABLE_SIZE, ucBank
             -Num, P11_B9_SCALER_LSR_HLW, _BURSTWRITE_COMMAND, _BURSTWRITE_FROM_FLASH);
  73   3              }
  74   2              else  // IVHeight/DVHeight <= 1
  75   2              {
  76   3                  ScalerBurstWrite(pucUltraVividSetting + _ULTRAVIVID_TABLE_SIZE * 2, _ULTRAVIVID_TABLE_SIZE, uc
             -BankNum, P11_B9_SCALER_LSR_HLW, _BURSTWRITE_COMMAND, _BURSTWRITE_FROM_FLASH);
  77   3              }
  78   2          }
  79   1          else if(GET_V_SCALE_DOWN() == _TRUE)
  80   1          {
  81   2              ScalerBurstWrite(pucUltraVividSetting + _ULTRAVIVID_TABLE_SIZE * 3, _ULTRAVIVID_TABLE_SIZE, ucBank
             -Num, P11_B9_SCALER_LSR_HLW, _BURSTWRITE_COMMAND, _BURSTWRITE_FROM_FLASH);
  82   2          }
  83   1          else // by pass
  84   1          {
  85   2              ScalerBurstWrite(pucUltraVividSetting + _ULTRAVIVID_TABLE_SIZE * 4, _ULTRAVIVID_TABLE_SIZE, ucBank
             -Num, P11_B9_SCALER_LSR_HLW, _BURSTWRITE_COMMAND, _BURSTWRITE_FROM_FLASH);
  86   2          }
  87   1      
  88   1          ScalerBurstWrite(pucUltraVividSetting + _ULTRAVIVID_TABLE_SIZE * 5, _ULTRAVIVID_TABLE_SIZE_CDS, ucBank
             -Num, P13_A0_SR_CDS_CTRL_0, _BURSTWRITE_COMMAND, _BURSTWRITE_FROM_FLASH);
  89   1      
  90   1          // Disable IDLTI
  91   1          ScalerSetBit(P11_A1_I_DLTI_CTRL_M1, ~_BIT0, 0x00);
  92   1      
  93   1          // Bypass DSHP
  94   1          ScalerSetBit(P12_A0_SR_SHP_CTRL_0, ~(_BIT7 | _BIT6 | _BIT5 | _BIT4), _BIT7);
  95   1          ScalerSetBit(P12_A1_SR_SHP_CTRL_1, ~(_BIT2 | _BIT1 | _BIT0), 0x00);
  96   1      
  97   1          // Wait for Event
  98   1          ScalerGlobalIDDomainDBApply(_DB_APPLY_NONE);
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    256    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V8.12   RL6432_SERIES_COLORULTRAVIVIDADJUST                                   05/25/2022 15:41:33 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
