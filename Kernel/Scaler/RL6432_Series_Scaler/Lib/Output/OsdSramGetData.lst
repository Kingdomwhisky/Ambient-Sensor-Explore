C51 COMPILER V8.12   OSDSRAMGETDATA                                                        05/25/2022 15:41:18 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OSDSRAMGETDATA
OBJECT MODULE PLACED IN .\Output\OsdSramGetData.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\ScalerFunction\Lib\Code\ScalerOSD\SRAM\OsdSramGetData.c LARGE OPTIMIZ
                    -E(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header;..\..\S
                    -calerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6432_Seri
                    -es_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output\OsdSram
                    -GetData.lst) OBJECT(.\Output\OsdSramGetData.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : OsdSramGetData.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "ScalerOSDLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          void ScalerOsdSramGetData(EnumOsdWriteType enumOsdWriteType, WORD usSramAddress, BYTE ucLength, BYTE *pucD
             -ata);
  45          
  46          
  47          //****************************************************************************
  48          // FUNCTION DEFINITIONS
  49          //****************************************************************************
  50          //--------------------------------------------------
C51 COMPILER V8.12   OSDSRAMGETDATA                                                        05/25/2022 15:41:18 PAGE 2   

  51          // Description  : Get SRAM address value
  52          // Input Value  : enumOsdWriteType -> _OSD_BYTE0 or _OSD_BYTE1 or _OSD_BYTE2
  53          //                ucLength -> Length
  54          // Output Value : pucData -> Data
  55          //--------------------------------------------------
  56          void ScalerOsdSramGetData(EnumOsdWriteType enumOsdWriteType, WORD usSramAddress, BYTE ucLength, BYTE *pucD
             -ata)
  57          {
  58   1          BYTE ucLenIdx = 0;
  59   1          BYTE ucRdIdx = 0;
  60   1          BYTE ucByteSel = 0;
  61   1          bit bOSDEnableBackup = 0;
  62   1      
  63   1          bOSDEnableBackup = ScalerGetBit(P3A_02_FRAME_CTRL_02, _BIT0);
  64   1      
  65   1          ScalerOsdCircuitActivated(_DISABLE);
  66   1          ScalerTimerWaitForEvent(_EVENT_DVS);
  67   1      
  68   1          ScalerSetBit(P3A_33_FRAME_CTRL_33, ~_BIT4, _BIT4);
  69   1      
  70   1          ucByteSel = ((enumOsdWriteType == _OSD_BYTEALL) ? (3) : ((enumOsdWriteType == _OSD_BYTE0_BYTE1) ? 2 : 
             -((enumOsdWriteType == _OSD_BYTE0_BYTE2) ? 2 : ((enumOsdWriteType == _OSD_BYTE1_BYTE2) ? 2 : 1))));
  71   1      
  72   1          for(ucLenIdx = 0; ucLenIdx < ucLength; ucLenIdx++)
  73   1          {
  74   2              ScalerOsdSramAddressSet(usSramAddress + ucLenIdx, enumOsdWriteType);
  75   2      
  76   2              for(ucRdIdx = 0; ucRdIdx < ucByteSel; ucRdIdx++)
  77   2              {
  78   3                  pucData[(ucLenIdx * ucByteSel) + ucRdIdx] = ScalerGetByte(P0_92_OSD_DATA_PORT);
  79   3              }
  80   2      
  81   2              for(ucRdIdx = 0; ucRdIdx < ucByteSel; ucRdIdx++)
  82   2              {
  83   3                  pucData[(ucLenIdx * ucByteSel) + ucRdIdx] = ScalerGetByte(P0_92_OSD_DATA_PORT);
  84   3              }
  85   2          }
  86   1      
  87   1          ScalerSetBit(P3A_33_FRAME_CTRL_33, ~_BIT4, 0x00);
  88   1          ScalerOsdCircuitActivated(bOSDEnableBackup);
  89   1      }
  90          
  91          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    254    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
