C51 COMPILER V8.12   RL6432_SERIES_MEMORYFUNCTION                                          05/25/2022 15:41:36 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE RL6432_SERIES_MEMORYFUNCTION
OBJECT MODULE PLACED IN .\Output\RL6432_Series_MemoryFunction.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\RL6432_Series_Memory\RL6432_Series_MemoryFunction.c LARGE OPTIMIZE(9,S
                    -PEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header;..\..\Scaler
                    -CommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6432_Series_Co
                    -mmon\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output\RL6432_Serie
                    -s_MemoryFunction.lst) OBJECT(.\Output\RL6432_Series_MemoryFunction.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : RL6432_Series_MemoryFunction.c No.0000
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "RL6432_Series_MemoryLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          DWORD ScalerMemoryCalculateNumberAndRemain(DWORD ulTotalSize, WORD usLength, bit bDummy);
  45          
  46          
  47          //****************************************************************************
  48          // FUNCTION DEFINITIONS
  49          //****************************************************************************
  50          
  51          //--------------------------------------------------
C51 COMPILER V8.12   RL6432_SERIES_MEMORYFUNCTION                                          05/25/2022 15:41:36 PAGE 2   

  52          // Description  : Calculate the number and remain
  53          // Input Value  : ulTotalSize --> Image total size
  54          //                ucLength --> Length of SDRAM access
  55          // Output Value : Number and Remain
  56          //--------------------------------------------------
  57          DWORD ScalerMemoryCalculateNumberAndRemain(DWORD ulTotalSize, WORD usLength, bit bDummy)
  58          {
  59   1          if(bDummy == _TRUE)
  60   1          {
  61   2              /// In 6432, System Bridge data bus is 128 bits,
  62   2              ///   but its burst length and address unit is still 64 bits.
  63   2              ///   So NUM, LEN, and REM must be a multiple of 4.
  64   2              if((ulTotalSize & 0x03) != 0x00)
  65   2              {
  66   3                  (ulTotalSize += 4 - (ulTotalSize & 0x03));
  67   3              }
  68   2          }
  69   1      
  70   1          if((ulTotalSize % usLength) != 0)
  71   1          {
  72   2              PDATA_WORD(0) = ulTotalSize / usLength; // Number
  73   2              PDATA_WORD(1) = ulTotalSize % usLength; // Remain
  74   2          }
  75   1          else
  76   1          {
  77   2              ulTotalSize = ulTotalSize - usLength;
  78   2              PDATA_WORD(0) = ulTotalSize / usLength; // Number
  79   2              PDATA_WORD(1) = usLength;               // Remain
  80   2          }
  81   1      
  82   1          return (((DWORD)PDATA_WORD(1) << 16) | PDATA_WORD(0));
  83   1      }
  84          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    273    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
