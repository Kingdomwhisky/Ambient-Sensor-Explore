C51 COMPILER V8.12   SCALERCOMMONMULTIBYTEREAD                                             05/25/2022 15:40:56 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE SCALERCOMMONMULTIBYTEREAD
OBJECT MODULE PLACED IN .\Output\ScalerCommonMultiByteRead.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\ScalerCommonFunction\Lib\Code\ScalerCommonReg\ScalerCommonMultiByteRe
                    -ad.c LARGE OPTIMIZE(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunct
                    -ion\Header;..\..\ScalerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header
                    -;..\..\RL6432_Series_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRIN
                    -T(.\Output\ScalerCommonMultiByteRead.lst) OBJECT(.\Output\ScalerCommonMultiByteRead.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : ScalerCommonMultiByteRead.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "ScalerCommonRegLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          
  45          void ScalerRead(WORD usAddr, WORD usLength, BYTE *pucArray, bit bAutoInc);
  46          
  47          //****************************************************************************
  48          // FUNCTION DEFINITIONS
  49          //****************************************************************************
  50          //--------------------------------------------------
  51          // Description  : Read data from registers of scaler and put it into an reading data array
C51 COMPILER V8.12   SCALERCOMMONMULTIBYTEREAD                                             05/25/2022 15:40:56 PAGE 2   

  52          // Input Value  : usAddr    --> Start address of register
  53          //                usLength  --> Numbers of data we want to read
  54          //                pArray    --> Pointer of the reading data array
  55          //                bAutoInc  --> Address auto increasing select
  56          // Output Value : None
  57          //--------------------------------------------------
  58          void ScalerRead(WORD usAddr, WORD usLength, BYTE *pucArray, bit bAutoInc)
  59          {
  60   1          if(usLength != 0)
  61   1          {
  62   2              if(bAutoInc == _AUTOINC)
  63   2              {
  64   3                  memcpy(pucArray, (BYTE xdata *)usAddr, usLength);
  65   3              }
  66   2              else
  67   2              {
  68   3                  WORD usIndex = 0;
  69   3      
  70   3                  for(usIndex = 0; usIndex < usLength; usIndex++)
  71   3                  {
  72   4                      pucArray[usIndex] = ScalerGetByte(usAddr);
  73   4                  }
  74   3              }
  75   2          }
  76   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    160    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
