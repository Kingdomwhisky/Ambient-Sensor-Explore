C51 COMPILER V8.12   RL6432_SERIES_AUTOMEASURECOLORVALUE                                   05/25/2022 15:41:43 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE RL6432_SERIES_AUTOMEASURECOLORVALUE
OBJECT MODULE PLACED IN .\Output\RL6432_Series_AutoMeasureColorValue.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\RL6432_Series_Auto\RL6432_Series_AutoMeasureColorValue.c LARGE OPTIMIZ
                    -E(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header;..\..\S
                    -calerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6432_Seri
                    -es_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output\RL6432_
                    -Series_AutoMeasureColorValue.lst) OBJECT(.\Output\RL6432_Series_AutoMeasureColorValue.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : RL6432_Series_AutoMeasureColorValue.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "RL6432_Series_ColorLibInternalInclude.h"
  20          
  21          
  22          //****************************************************************************
  23          // DEFINITIONS / MACROS
  24          //****************************************************************************
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          EnumAutoResult ScalerAutoMeasureColorValue(BYTE ucColor, bit bSelectMax, BYTE *pucResult);
  45          
  46          
  47          //****************************************************************************
  48          // FUNCTION DEFINITIONS
  49          //****************************************************************************
  50          //--------------------------------------------------
  51          // Description  : Measure color min/max from specific channel
C51 COMPILER V8.12   RL6432_SERIES_AUTOMEASURECOLORVALUE                                   05/25/2022 15:41:43 PAGE 2   

  52          // Input Value  : ucColor --> R/G/B
  53          //                pucResult --> memory to store measure result
  54          // Output Value : _AUTO_FAIL or _AUTO_SUCCESS
  55          //--------------------------------------------------
  56          EnumAutoResult ScalerAutoMeasureColorValue(BYTE ucColor, bit bSelectMax, BYTE *pucResult)
  57          {
  58   1          // Disable 121-LPF; Set to R channel for auto-balance new mode
  59   1          ScalerSetBit(P30_CA_VGATOP_AUTO_ADJ_CTRL0, ~(_BIT5 | _BIT1 | _BIT0), _BIT1);
  60   1      
  61   1          // Enable image auto-balance new mode
  62   1          ScalerSetBit(P30_C6_VGATOP_RED_NOISE_MARGIN, ~_BIT0, _BIT0);
  63   1      
  64   1          // Start Measure
  65   1          if(ScalerAutoCompareMeasure((bSelectMax == _TRUE) ? _MEASURE_MAX : _MEASURE_RGB_MIN) == _AUTO_FAIL)
  66   1          {
  67   2              return _AUTO_FAIL;
  68   2          }
  69   1      
  70   1          switch(ucColor)
  71   1          {
  72   2              case _AUTO_RED_CHANNEL:
  73   2                  *pucResult = ScalerGetByte(P30_D4_VGATOP_AUTO_PHASE_3);
  74   2                  break;
  75   2      
  76   2              case _AUTO_GREEN_CHANNEL:
  77   2                  *pucResult = ScalerGetByte(P30_D5_VGATOP_AUTO_PHASE_2);
  78   2                  break;
  79   2      
  80   2              case _AUTO_BLUE_CHANNEL:
  81   2                  *pucResult = ScalerGetByte(P30_D6_VGATOP_AUTO_PHASE_1);
  82   2                  break;
  83   2      
  84   2              default:
  85   2                  return _AUTO_FAIL;
  86   2          }
  87   1      
  88   1          return _AUTO_SUCCESS;
  89   1      }
  90          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     92    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
