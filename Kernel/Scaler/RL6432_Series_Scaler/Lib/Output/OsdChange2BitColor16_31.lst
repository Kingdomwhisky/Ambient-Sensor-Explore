C51 COMPILER V8.12   OSDCHANGE2BITCOLOR16_31                                               05/25/2022 15:41:13 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OSDCHANGE2BITCOLOR16_31
OBJECT MODULE PLACED IN .\Output\OsdChange2BitColor16_31.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\ScalerFunction\Lib\Code\ScalerOSD\SRAM\OsdChange2BitColor16_31.c LARG
                    -E OPTIMIZE(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Heade
                    -r;..\..\ScalerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL
                    -6432_Series_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Outpu
                    -t\OsdChange2BitColor16_31.lst) OBJECT(.\Output\OsdChange2BitColor16_31.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : OsdChange2BitColor16_31.c
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          #include "ScalerOSDLibInternalInclude.h"
  20          
  21          //****************************************************************************
  22          // DEFINITIONS / MACROS
  23          //****************************************************************************
  24          
  25          
  26          //****************************************************************************
  27          // STRUCT / TYPE / ENUM DEFINITTIONS
  28          //****************************************************************************
  29          
  30          
  31          //****************************************************************************
  32          // CODE TABLES
  33          //****************************************************************************
  34          
  35          
  36          //****************************************************************************
  37          // VARIABLE DECLARATIONS
  38          //****************************************************************************
  39          
  40          
  41          //****************************************************************************
  42          // FUNCTION DECLARATIONS
  43          //****************************************************************************
  44          void ScalerOsdChange2BitColor16_31(BYTE ucRow, BYTE ucCol, BYTE ucLength, BYTE ucHeight, BYTE ucColor0, BY
             -TE ucColor1, BYTE ucColor2, BYTE ucColor3);
  45          
  46          
  47          //****************************************************************************
  48          // FUNCTION DEFINITIONS
  49          //****************************************************************************
  50          //--------------------------------------------------
C51 COMPILER V8.12   OSDCHANGE2BITCOLOR16_31                                               05/25/2022 15:41:13 PAGE 2   

  51          // Description  : SRAM address value and which byte
  52          // Input Value  : ucRow. ucCol. ucLength. ucHeight.       -> Just that !!
  53          //                ucColor0. ucColor1. ucColor2. ucColor3  -> Color number
  54          // Output Value :
  55          //--------------------------------------------------
  56          void ScalerOsdChange2BitColor16_31(BYTE ucRow, BYTE ucCol, BYTE ucLength, BYTE ucHeight, BYTE ucColor0, BY
             -TE ucColor1, BYTE ucColor2, BYTE ucColor3)
  57          {
  58   1          BYTE ucRowCmdByte0 = _BIT7;
  59   1          bit bOSDOn = _OFF;
  60   1          BYTE ucTemp = 0;
  61   1      
  62   1          // Get OSD Status
  63   1          bOSDOn = ScalerGetBit(P3A_02_FRAME_CTRL_02, _BIT0);
  64   1      
  65   1          // Set OSD Circuit Enable for Write-Protection Function effective in OSD enable.
  66   1          ScalerSetBit(P3A_02_FRAME_CTRL_02, ~(_BIT0), _ON);
  67   1      
  68   1          // Check Global Double Buffer
  69   1          if(bOSDOn == _OFF)
  70   1          {
  71   2              ScalerTimerWaitForEvent(_EVENT_DVS);
  72   2          }
  73   1      
  74   1          if(((ucColor0 >= 16) && (ucColor1 >= 16) && (ucColor2 >= 16) && (ucColor3 >= 16)))
  75   1          {
  76   2              ucRowCmdByte0 |= _BIT6;
  77   2              ucColor0 -= 16;
  78   2              ucColor1 -= 16;
  79   2              ucColor2 -= 16;
  80   2              ucColor3 -= 16;
  81   2          }
  82   1      
  83   1      
  84   1          if(ScalerGetBit(P3A_18_FRAME_CTRL_18, _BIT3) == _BIT3) // OSD 2 font function
  85   1          {
  86   2              if(ucRow >= _OSD_MAP_B_ROW_OFFSET)
  87   2              {
  88   3                  ScalerOsdSramAddressSet((ScalerGetByte(P3A_1A_FRAME_CTRL_1A) + (ucRow - _OSD_MAP_B_ROW_OFFSET)
             -), _OSD_BYTE0);
  89   3              }
  90   2              else
  91   2              {
  92   3                  ScalerOsdSramAddressSet((ScalerGetByte(P3A_19_FRAME_CTRL_19) + ucRow), _OSD_BYTE0);
  93   3              }
  94   2          }
  95   1          else
  96   1          {
  97   2              ScalerOsdSramAddressSet((0 + ucRow), _OSD_BYTE0);
  98   2          }
  99   1      
 100   1          for(ucTemp = 0; ucTemp < ucHeight; ucTemp++)
 101   1          {
 102   2              ScalerOsdDataPort(ucRowCmdByte0);
 103   2          }
 104   1      
 105   1          ScalerOsdChange2BitColor(ucRow, ucCol, ucLength, ucHeight, ucColor0, ucColor1, ucColor2, ucColor3);
 106   1      
 107   1          // Recovery OSD Status
 108   1          if(bOSDOn == _OFF)
 109   1          {
 110   2              ScalerOsdCircuitActivated(bOSDOn);
C51 COMPILER V8.12   OSDCHANGE2BITCOLOR16_31                                               05/25/2022 15:41:13 PAGE 3   

 111   2          }
 112   1      }
 113          
 114          
 115          /*
 116          //--------------------------------------------------
 117          // example
 118          //--------------------------------------------------
 119              ScalerOsdChange2BitColor(ROW(0), COL(0), LENGTH(1), HEIGHT(1), COLOR00(0), COLOR01(1), COLOR10(2), COL
             -OR11(3));
 120          */
 121          
 122          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    262    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
