C51 COMPILER V8.12   OSDWINDOWONOFF                                                        05/25/2022 15:41:22 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OSDWINDOWONOFF
OBJECT MODULE PLACED IN .\Output\OsdWindowOnOFF.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\ScalerFunction\Lib\Code\ScalerOSD\Windows\OsdWindowOnOFF.c LARGE OPTI
                    -MIZE(9,SPEED) INCDIR(..\..\..\Common;..\Header;.\Header;..\..\ScalerFunction\Lib\Header;..\..\ScalerFunction\Header;..\.
                    -.\ScalerCommonFunction\Lib\Header;..\..\ScalerCommonFunction\Header;..\..\RL6432_Series_Common\Lib\Header;..\..\RL6432_S
                    -eries_Common\Header) DEFINE(_TRANSLATOR_SUPPORT=_OFF,_SCALER_TYPE=_RL6432_SERIES) DEBUG OBJECTEXTEND PRINT(.\Output\OsdW
                    -indowOnOFF.lst) OBJECT(.\Output\OsdWindowOnOFF.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2012>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          //----------------------------------------------------------------------------------------------------
  15          // ID Code      : OsdWindowOnOFF.c
  16          // Update Note  :
  17          //----------------------------------------------------------------------------------------------------
  18          #include "ScalerOSDLibInternalInclude.h"
  19          
  20          //****************************************************************************
  21          // DEFINITIONS / MACROS
  22          //****************************************************************************
  23          
  24          
  25          //****************************************************************************
  26          // STRUCT / TYPE / ENUM DEFINITTIONS
  27          //****************************************************************************
  28          
  29          
  30          //****************************************************************************
  31          // CODE TABLES
  32          //****************************************************************************
  33          
  34          
  35          //****************************************************************************
  36          // VARIABLE DECLARATIONS
  37          //****************************************************************************
  38          
  39          
  40          //****************************************************************************
  41          // FUNCTION DECLARATIONS
  42          //****************************************************************************
  43          void ScalerOsdWindowOnOFF(EnumOsdWindowsType enumOsdWindowsType, bit bWinOnOff);
  44          
  45          //****************************************************************************
  46          // FUNCTION DEFINITIONS
  47          //****************************************************************************
  48          //--------------------------------------------------
  49          // Description  : Enable/Disable window
  50          // Input Value  : enumOsdWindowsType -> _OSD_WINDOW_0,   _OSD_WINDOW_1,   _OSD_WINDOW_2,   _OSD_WINDOW_3, 
             -  _OSD_WINDOW_4,   _OSD_WINDOW_5,
C51 COMPILER V8.12   OSDWINDOWONOFF                                                        05/25/2022 15:41:22 PAGE 2   

  51          //                                      _OSD_WINDOW_6,   _OSD_WINDOW_7,   _OSD_WINDOW_8,   _OSD_WINDOW_9, 
             -  _OSD_WINDOW_4_1, _OSD_WINDOW_4_2,
  52          //                                      _OSD_WINDOW_4_3, _OSD_WINDOW_4_4, _OSD_WINDOW_4_5, _OSD_WINDOW_4_6
             -, _OSD_WINDOW_4_7, _OSD_WINDOW_4_8
  53          //                                      _OSD_WINDOW_5_1, _OSD_WINDOW_5_2, _OSD_WINDOW_5_3, _OSD_WINDOW_5_4
             -, _OSD_WINDOW_5_5, _OSD_WINDOW_5_6,
  54          //                                      _OSD_WINDOW_5_7, _OSD_WINDOW_5_8
  55          //                                      _OSD_WINDOW_ALL,
  56          // Output Value :
  57          //--------------------------------------------------
  58          void ScalerOsdWindowOnOFF(EnumOsdWindowsType enumOsdWindowsType, bit bWinOnOff)
  59          {
  60   1          if(enumOsdWindowsType <= _OSD_WINDOW_7)
  61   1          {
  62   2              // _OSD_WINDOW_0 ~ _OSD_WINDOW_7
  63   2              ScalerSetBit(P3A_57_FRAME_CTRL_57, ~(_BIT0 << enumOsdWindowsType), ((BYTE)bWinOnOff << enumOsdWind
             -owsType));
  64   2          }
  65   1          else if((enumOsdWindowsType == _OSD_WINDOW_8) || (enumOsdWindowsType == _OSD_WINDOW_9))
  66   1          {
  67   2              // _OSD_WINDOW_8 ~ _OSD_WINDOW_9
  68   2              ScalerSetBit(P3A_58_FRAME_CTRL_58, ~(_BIT0 << (enumOsdWindowsType - _OSD_WINDOW_8)), ((BYTE)bWinOn
             -Off << (enumOsdWindowsType - _OSD_WINDOW_8)));
  69   2          }
  70   1          else if((enumOsdWindowsType >= _OSD_WINDOW_4_1) && (enumOsdWindowsType <= _OSD_WINDOW_4_8))
  71   1          {
  72   2              // _OSD_WINDOW_4_1 ~ _OSD_WINDOW_4_8
  73   2              ScalerSetBit(P3A_59_FRAME_CTRL_59, ~(_BIT0 << (enumOsdWindowsType - _OSD_WINDOW_4_1)), ((BYTE)bWin
             -OnOff << (enumOsdWindowsType - _OSD_WINDOW_4_1)));
  74   2          }
  75   1      #if(_OSD_WINDOW_5_1_5_8_SUPPORT == _ON)
  76   1          else if((enumOsdWindowsType >= _OSD_WINDOW_5_1) && (enumOsdWindowsType <= _OSD_WINDOW_5_8))
  77   1          {
  78   2              // _OSD_WINDOW_5_1 ~ _OSD_WINDOW_5_8
  79   2              ScalerSetBit(P3A_5A_FRAME_CTRL_5A, ~(_BIT0 << (enumOsdWindowsType - _OSD_WINDOW_5_1)), ((BYTE)bWin
             -OnOff << (enumOsdWindowsType - _OSD_WINDOW_5_1)));
  80   2          }
  81   1      #endif
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
